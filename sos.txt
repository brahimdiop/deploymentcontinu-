Kubernetes Dashboard is a powerful web-based user interface that allows you to manage and monitor your Kubernetes clusters with ease. Whether you're a beginner or an experienced Kubernetes user, this tutorial is designed to provide you with all the information you need to get started.

Steps: I followed--
Step 1: Log in to Ec2 machine using 
ssh -i key.pem -L 8080:localhost:8080 ec2-user@ec2IP

Step 2: Run the Below command to Enable the Dashboard

kubectl apply -f https://raw.githubusercontent.com/kub...

Step 3: Create users and roles for the dashboard
vi admin-user-service-account.yaml 
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kubernetes-dashboard

vi admin-user-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kubernetes-dashboard

#Run below command to create user
kubectl apply -f admin-user-service-account.yaml -f admin-user-cluster-role-binding.yaml

#output should look like below
serviceaccount/admin-user created
clusterrolebinding.rbac.authorization.k8s.io/admin-user created

Ste4: Create Token for user
kubectl -n kubernetes-dashboard create token admin-user
#Output should look like

eyJhbGciOiJSUzI1NiIsImtpZCI6Im1nYXFVVFN6ak03MllicC00SHpCNlN4eXJOTXE4azlZRTRTYkptVXV2b28ifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNjk5MzgxNzc1LCJpYXQiOjE2OTkzNzgxNzUsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsInNlcnZpY2VhY2NvdW50Ijp7Im5hbWUiOiJhZG1pbi11c2VyIiwidWlkIjoiYzRkMTQwNjEtYWYwZC00MDc1LWE1ODAtOGMzOWQzNmNlNmJhIn19LCJuYmYiOjE2OTkzNzgxNzUsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlcm5ldGVzLWRhc2hib2FyZDphZG1pbi11c2VyIn0.IFPJSeB0leOcILB0na9TAAjh7FEvwyj3GQJuhP8m52iPOLUmxcSLZeMGWlvVs1QF1jourE3ZAH4aRHa1t8gUmnkGQRIPZzWY4WYRh-tzM-xrV0DdIhqOWjeOs3Fb5xpNORr6V4WBDo0-Mm5Dm_kJacIekOz1GLnUXgS4bsk4P4aaApz96mehQWJqw7DUcLOmp_w3P1cPUo3Qw9NNVlqYDwrW2XTIbTkpWctYBH9YralzSeoubN9jG-RCMlvwhAwoUnOrdiFIiC95npS71LncTR-mx65TvzLK0f7UAy7M9ZFZuh_u95NEV8sRA9R6os7R_TNOv8MVg8WZBjjwHA2duw


Step 5: Run Below command for port fordwarding
kubectl port-forward -n kubernetes-dashboard service/kubernetes-dashboard 8080:443



=====================================================================================METRCIS SERVER=================================================




kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/high-availability-1.21+.yaml

kubectl edit deploy metrics-server -n kube-system

a modfier 

containers:
      - args:
        - --cert-dir=/tmp
        - --secure-port=4443
        - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
        - --kubelet-use-node-status-port
        - --metric-resolution=15s
        - --kubelet-insecure-tls=true   
    
    
    dnsPolicy: ClusterFirst
      hostNetwork: true
      nodeSelector:

        

================================================================================git =================================================
probleme authentification

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

git remote set-url origin https://<token>@github.com/<username>/<repo>
exemple 
git remote set-url origin https://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@github.com/brahimdiop/deploymentcontinu-
  
======================================================================================================================================




